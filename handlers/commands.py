from aiogram import Router, types, F
from aiogram.filters.command import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import Message

router = Router()
users_points = 0


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£–∑–Ω–∞—Ç—å –º–æ–∏ –±–∞–ª–ª—ã",
        callback_data="user_points_value")
    )
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –≤ –®–∫–æ–ª–µ –ù–∞—Å—Ç–∏ –†—ã–±–∫–∏. \n–ß—Ç–æ–±—ã '
        '—É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—É–º–º—É –≤–∞—à–∏—Ö –±–∞–ª–ª–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
        reply_markup=builder.as_markup()
    )


@router.message(Command("about"))
async def cmd_about(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£–∑–Ω–∞—Ç—å –º–æ–∏ –±–∞–ª–ª—ã",
        callback_data="user_points_value")
    )
    await message.answer(
        '–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –≤ –®–∫–æ–ª–µ –ù–∞—Å—Ç–∏ –†—ã–±–∫–∏. \n–ß—Ç–æ–±—ã '
        '—É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—É–º–º—É –≤–∞—à–∏—Ö –±–∞–ª–ª–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
        reply_markup=builder.as_markup()
    )


@router.message(Command("ban"), F.reply_to_message)
async def cmd_ban(message: Message, admins: set[int]):
    if message.from_user.id not in admins:
        await message.answer(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        )
    else:
        await message.chat.ban(
            user_id=message.reply_to_message.from_user.id
        )
        await message.answer("–ù–∞—Ä—É—à–∏—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")


@router.callback_query(F.data == "user_points_value")
async def send_user_points_value(callback: types.CallbackQuery):
    await callback.message.answer(f'–£–≤–∞–∂–∞–µ–º—ã–π {callback.from_user.first_name}, —É –≤–∞—Å {users_points} –±–∞–ª–ª–æ–≤.')
    await callback.answer()
